#include <stdio.h>
#include <stdlib.h>
#define SIZE 100
int queue[SIZE], front = -1, rear = -1;

int isempty() {
    return (front == -1);
}

int isfull() {
    return (rear == SIZE - 1);
}

void enqueue(int data) {
    if (isfull()) {
        printf("Queue overflow!!\n");
    } else {
        queue[++rear] = data;
        if (front == -1) {
            front = rear;
        }
        printf("Element inserted !!!\n");
    }
}

int dequeue() {
    if (isempty()) {
        printf("Queue underflow!!\n");
        return -1;
    } else {
        int data = queue[front];
        if (front == rear) {
            front = rear = -1;
        } else {
            front++;
        }
        return data;
    }
}

int peek() {
    if (isempty()) {
        printf("Queue underflow!!\n");
        return -1;
    } else {
        return queue[front];
    }
}

void display() {
    if (isempty()) {
        printf("Queue underflow!!\n");
    } else {
        printf("Queue elements are: ");
        for (int i = front; i <= rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}

int main() {
    while (1) {
        int choice, data;
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Element: ");
                scanf("%d", &data);
                enqueue(data);
                break;
            case 2:
                data = dequeue();
                if (data != -1) {
                    printf("Dequeued: %d\n", data);
                }
                break;
            case 3:
                data = peek();
                if (data != -1) {
                    printf("Front element: %d\n", data);
                }
                break;
            case 4:
                display();
                break;
            case 5:
                exit(0);
                break;
            default:
                printf("Invalid choice!!!!\n");
                break;
        }
    }
    return 0;
}
